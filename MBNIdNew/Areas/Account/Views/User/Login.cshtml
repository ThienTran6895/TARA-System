@model MB.OMS.Account.Domain.Model.LoginViewModel

@{
    ViewBag.Title = "Log in";
    Layout = "~/Views/Shared/_Login.cshtml";
}

<div class="container-xxl">
    <div class="authentication-wrapper authentication-basic container-p-y">
        <div class="authentication-inner">
            <!-- Register -->
            <div class="card">
                <div class="card-body">
                    <!-- Logo -->
                    <div class="app-brand justify-content-center">
                        <a href="index.html" class="app-brand-link gap-2">
                            <span class="app-brand-logo demo">
                                <img src="~/Content/assets/img/logo/site-logo.png" />
                            </span>
                        </a>
                    </div>
                    <!-- /Logo -->

                    @using (Html.BeginForm("Login", "User", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "mb-3", role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="mb-3">
                            <label for="email" class="form-label">Email or Username</label>
                            @Html.TextBoxFor(model => model.UserName, new { @class = "form-control valid", @autofocus = "autofocus", @placeholder = "Tài khoản đăng nhập" })
                            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                        </div>
                        <div class="mb-3 form-password-toggle">
                            <div class="d-flex justify-content-between">
                                <label class="form-label" for="password">Password</label>
                            </div>
                            <div class="input-group input-group-merge">
                                @Html.PasswordFor(model => model.Password, new { @class = "form-control", @placeholder = "Mật khẩu" })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger form-control" })
                                <span class="input-group-text cursor-pointer"><i class="bx bx-hide"></i></span>
                            </div>
                        </div>
                        <div class="mb-3">
                            <div class="form-check">
                                <label>
                                    @Html.EditorFor(model => model.RememberMe)
                                    @Html.ValidationMessageFor(model => model.RememberMe, "", new { @class = "text-danger" })
                                    Ghi nhớ đăng nhập
                                </label>
                            </div>
                        </div>
                        <div class="mb-3">
                            <button type="submit" id="btnLogin" class="btn btn-primary btn-block btn-flat d-grid w-100 btnSave"> Đăng nhập</button>
                        </div>
                    }

                </div>
            </div>
            <!-- /Register -->
        </div>
    </div>
</div>

<div class="buy-now">
    <a href="https://themeselection.com/products/sneat-bootstrap-html-admin-template/"
       target="_blank"
       class="btn btn-danger btn-buy-now">Upgrade to Pro</a>
</div>

@*<script>
    $(function () {
        $('#RememberMe').iCheck({
            checkboxClass: 'icheckbox_square-blue',
            radioClass: 'iradio_square-blue',
            increaseArea: '20%' // optional
        });
    });
</script>*@
