@using MB.Web.Core.HTMLHelpers
@using MB.Common.Helpers
@model MB.OMS.Telesale.Domain.Model.CustomerExistDTO
@{
    ViewBag.Title = "Quản lý khách hàng trùng";
    Layout = "~/Views/Shared/_MasterLayout.cshtml";
}

@section Breadcrumb {
    <h1>
        Quản lý khách hàng
        <small>So sánh thông tin khách hàng trùng</small>
    </h1>
}

@Html.HiddenFor(model => model.CustomerExistID)

<div class="box box-primary">
    <div class="box-header with-border">
        <h3 class="box-title">So sánh thông tin khách hàng trùng</h3>
    </div>
    <div class="box-body no-padding">
        <table class="table table-hover" id="grid">
            <tr>
                <th style="width: 10px"><input type="checkbox" id="mastercheckbox" /></th>
                <th>Thuộc tính</th>
                <th>Khách hàng trùng</th>
                <th>Khách hàng hiện có</th>
            </tr>
            <tr>
                <td></td>
                <td>@Html.DisplayNameFor(model => model.Phone)</td>
                <td class="text-red">@Html.DisplayTextFor(model => model.Phone)</td>
                <td class="text-red">@Html.DisplayTextFor(model => model.Customer.MobilePhone)</td>
            </tr>
            @for (int i = 0; i < Model.AvailableCustomerFieldValue.Count; i++)
            {
                <tr>
                    <td><input type="checkbox" class="checkboxGroups" value="@Model.AvailableCustomerFieldValue[i].FieldCode" /></td>
                    <td>@Html.DisplayFor(model => model.AvailableCustomerFieldValue[i].FieldName)</td>
                    <td>@Html.DisplayTextFor(model => model.AvailableCustomerFieldValue[i].FieldValue)</td>
                    <td>@Html.DisplayTextFor(model => model.Customer.AvailableCustomerFieldValue[i].FieldValue)</td>
                </tr>
            }
        </table>
    </div>
    <div class="box-footer text-center">
        <div class="col-md-12 center">
            <button type="button" id="btnSave" class="btn btn-primary">Ghi đè</button>
            <a href="@Url.Action("ListCustomerExist", "Customer")">
                <input type="button" class="btn btn-warning" value="Trở về" />
            </a>
        </div>
    </div>
</div>
<script type="text/javascript">
    var selectedIds = [];
    $(document).ready(function () {
        $('#mastercheckbox').click(function () {
            $('.checkboxGroups').attr('checked', $(this).is(':checked')).change();
        });
        $('#grid').on('change', 'input[type=checkbox][id!=mastercheckbox]', function (e) {
            var $check = $(this);
            if ($check.is(":checked") == true) {
                var checked = jQuery.inArray($check.val(), selectedIds);
                if (checked == -1) {
                    selectedIds.push($check.val());
                }
            }
            else {
                var checked = jQuery.inArray($check.val(), selectedIds);
                if (checked > -1) {
                    selectedIds = $.grep(selectedIds, function (item, index) {
                        return item != $check.val();
                    });
                }
            }
            updateMasterCheckbox();
        });

        $('#btnSave').click(function (e) {
            e.preventDefault();

            var postData = {
                selectedIds: selectedIds,
                customerExistID: $('#CustomerExistID').val()
            };

            if (selectedIds.length <= 0)
            {
                swal({ title: "Ghi đè không thành công", text: "Chọn thuộc tính khách hàng trước khi ghi đè", type: "error" });
            }
            else {
                $.ajax({
                    type: "POST",
                    url: "@(Url.Action("CompareCustomer", "Customer"))",
                    data: postData,
                    success: function (data) {
                        if (data.Result == "success")
                        {
                            swal({ title: data.Title, text: data.Message, type: "success" }, function () {
                                window.location.href = data.URLEdit;
                            });
                        }

                        selectedIds = [];
                    },
                    error: function(xhr, ajaxOptions, thrownError) {
                        alert(thrownError);
                    },
                });
            }
            
            return false;
        });
    });
    function updateMasterCheckbox() {
        var numChkBoxes = $('#grid input[type=checkbox][id!=mastercheckbox]').length;
        var numChkBoxesChecked = $('#grid input[type=checkbox][id!=mastercheckbox]:checked').length;
        $('#mastercheckbox').attr('checked', numChkBoxes == numChkBoxesChecked && numChkBoxes > 0);
    }
</script>