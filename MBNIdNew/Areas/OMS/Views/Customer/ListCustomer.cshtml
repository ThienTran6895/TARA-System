@using MB.Web.Core
@using MB.Common.Helpers
@model MB.OMS.Telesale.Domain.Model.CustomerDTO

@{
    ViewBag.Title = "Quản lý khách hàng";
    Layout = "~/Views/Shared/_MasterLayout.cshtml";
}

@section Breadcrumb {
    <h1>
        Quản lý khách hàng
        <small>Danh sách khách hàng</small>
    </h1>
}

<div class="box box-default">
    <div class="box-header with-border">
        <h3 class="box-title">Danh sách khách hàng</h3>
    </div>
    <div class="box-body">
        <div class="row">
            <div class="col-md-10">
                <div class="form-group col-md-4">
                    @Html.DropDownListFor(model => model.SourceID, Model.AvailableSource, new { @class = "form-control", @style = "width:100%;" })
                </div>
                <div class="form-group col-md-3">
                    @Html.Label("Từ ngày", new { @class = "col-sm-4 control-label" })
                    <div class="col-md-8">
                        <div class="input-group">
                            <div class="input-group-addon">
                                <i class="fa fa-calendar"></i>
                            </div>
                            <input type="text" class="form-control pull-right" id="DateFrom">
                        </div>
                    </div>
                </div>
                <div class="form-group col-md-3">
                    @Html.Label("Đến ngày", new { @class = "col-sm-4 control-label" })
                    <div class="col-md-8">
                        <div class="input-group">
                            <div class="input-group-addon">
                                <i class="fa fa-calendar"></i>
                            </div>
                            <input type="text" class="form-control pull-right" id="DateEnd">
                        </div>
                    </div>
                </div>
                <div class="form-group col-md-2">
                    <div class="col-sm-12">
                        <button type="button" id="search" class="btn btn-default" style="margin-right: 5px;"><i class="fa fa-fw fa-search"></i>Tìm kiếm</button>
                    </div>
                </div>
            </div>
            <div class="col-md-2 box-tools ">
                <div class="btn-group pull-right">
                    <button type="button" class="btn btn-primary">Thao tác</button>
                    <button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown">
                        <span class="caret"></span>
                        <span class="sr-only">Toggle Dropdown</span>
                    </button>
                    <ul class="dropdown-menu" role="menu">
                        @if (CommonHelper.CheckPermisionExist(Permissions.ThemKhachHangMoi.ToString()))
                        {
                            <li><a href="@Url.Action("AddCustomer")"><i class="fa fa-user-plus"></i> Thêm mới</a></li>
                        }
                        @if (CommonHelper.CheckPermisionExist(Permissions.XoaKhachHangMoi.ToString()))
                        {
                            <li><a id="deleteCustomer"><i class="fa fa-remove"></i> Xóa</a></li>
                        }
                        @if (CommonHelper.CheckPermisionExist(Permissions.XuatKhachHangMoi.ToString()))
                        {
                            <li class="divider"></li>
                            <li><a target="_blank" href="@Url.Action("ImportExcel")"><i class="fa fa-cloud-upload"></i> Import excel</a></li>
                            <li><a id="exportCustomer"><i class="fa fa-cloud-upload"></i> Export Excel</a></li>
                            <li><a id="exportCSVCustomer"><i class="fa fa-cloud-upload"></i> Export CVS</a></li>
                        }
                    </ul>
                </div>
            </div>
        </div>
        <div id="grid" class="box-body table-responsive no-padding k-grid k-widget">
            <script type="text/javascript">
                var array = @Html.Raw(Json.Encode(ViewBag.ListCustomerField))
                array.push({
                    command: [{
                        name: "Cập nhật",
                        text: "",
                        imageClass: "glyphicon glyphicon-edit",
                        //className: "glyphicon glyphicon-edit",
                        click: function (e) {
                            // prevent page scroll position change
                            e.preventDefault();
                            // e.target is the DOM element representing the button
                            var tr = $(e.target).closest("tr"); // get the current table row (tr)
                            // get the data bound to the current table row
                            var data = this.dataItem(tr);

                            window.location.href = '@Url.Action("EditCustomer", "Customer")?customerID=' + data[6].Value;
                        }
                    }]
                });
                array.unshift(
                {
                    field: "[6].Value",
                    headerTemplate: "<input id='mastercheckbox' type='checkbox'/>",
                    headerAttributes: { style: "text-align:center" },
                    attributes: { style: "text-align:center" },
                    template: "<input type='checkbox' value='#=data[6].Value#' class='checkboxGroups'/>",
                    width: 30,
                    filterable: false,
                    sortable: false
                    }
                );
                $(document).ready(function () {
                    //if ($('select[name=SourceID] option:selected').val() == 0) return;

                    var dataSource = new kendo.data.DataSource({
                        type: "json",
                        transport: {
                            read: {
                                url: '@Html.Raw(Url.Action("GetListCustomer", "Customer"))',
                                type: "POST",
                                dataType: "json",
                                data: additionalData,
                                success: function (result) {
                                    options.success(result);
                                }
                            }
                        },
                        schema: {
                            data: "Data",
                            total: "Total",
                            errors: "Errors"
                        },
                        columns: [{
                            field: "[6].Value",
                            format: "{0:yyyy-MM-dd hh:MM:ss}"
                        }],
                        error: function (e) {
                            display_kendoui_grid_error(e);
                            // Cancel the changes
                            this.cancelChanges();
                        },
                        parameterMap: function (options, type) {
                            return JSON.stringify(options);
                        },
                        pageSize: 20,
                        serverPaging: true
                    });
                    $("#grid").kendoGrid({
                        dataSource: dataSource,
                        pageable: {
                            refresh: true,
                            pageSizes: [20, 50, 100, 200, 500],
                            messages: {
                                display: "Hiển thị {0} - {1} trong {2} dòng",
                                empty: "Không có dữ liệu",
                                itemsPerPage: "dòng trên trang. "
                            }
                        },
                        sortable: true,
                        scrollable: true,
                        dataBound: onDataBound,

                        height: 800,
                        filterable: {
                            extra: false,
                            operators: {
                                string: {
                                    contains: "Kết quả chứa"
                                }
                            },
                            messages: {
                                info: "Chọn các mục tìm kiếm : ",
                                clear: "Xóa",
                                filter: "Tìm kiếm"
                            }
                        },
                        columns: array
                    });
                    dataSource.fetch(function () {
                        var data = this.data();
                        console.log(array);
                        $("#grid th[data-field='" + array[1] + "'] .k-link").html("Di động");
                        for (var i = 2; i <= array.length; i++) {
                            $("#grid th[data-field='" + array[i] + "'] .k-link").html(data[0][4 + i].Key);
                        }
                    });
                });
            </script>
            <script type="text/javascript">
                var selectedIds = [];
                $(document).ready(function () {
                    $("#@Html.IdFor(model => model.SourceID)").select2();
                    $("#DateFrom").datepicker({
                        autoclose: true
                    });
                    $("#DateEnd").datepicker({
                        autoclose: true
                    });
                    //search button
                    $('#search').click(function () {
                        //search
                        var grid = $('#grid').data('kendoGrid');
                        grid.dataSource.page(1);

                        $('.checkboxGroups').attr('checked', false).change();
                        selectedIds = [];

                        return false;
                    });

                    $('#mastercheckbox').click(function () {
                        $('.checkboxGroups').attr('checked', $(this).is(':checked')).change();
                    });

                    //wire up checkboxes.
                    $('#grid').on('change', 'input[type=checkbox][id!=mastercheckbox]', function (e) {
                        var $check = $(this);
                        if ($check.is(":checked") == true) {
                            var checked = jQuery.inArray($check.val(), selectedIds);
                            if (checked == -1) {
                                //add id to selectedIds.
                                selectedIds.push($check.val());
                            }
                        }
                        else {
                            var checked = jQuery.inArray($check.val(), selectedIds);
                            if (checked > -1) {
                                //remove id from selectedIds.
                                selectedIds = $.grep(selectedIds, function (item, index) {
                                    return item != $check.val();
                                });
                            }
                        }
                        updateMasterCheckbox();
                    });

                    //Delete Customer
                    $('#deleteCustomer').click(function (e) {
                        e.preventDefault();

                        var postData = {
                            selectedIds: selectedIds
                        };

                        if (selectedIds.length <= 0) {
                            swal({ title: "Xóa khách hàng không thành công", text: "Chọn khách hàng trước khi xóa", type: "error" });
                        }
                        else {

                            swal({
                                title: "Xác nhận xóa!",
                                text: "Bạn có chắc chắn xóa không?",
                                type: "warning",
                                showCancelButton: true,
                                cancelButtonText: "Hủy",
                                confirmButtonColor: "#DD6B55",
                                confirmButtonText: "Xác nhận!",
                                closeOnConfirm: false,
                                showLoaderOnConfirm: true,
                            }, function (isConfirm) {
                                if (isConfirm) {
                                    $.ajax({
                                        cache: false,
                                        type: "POST",
                                        url: "@(Url.Action("DeleteSelected", "Customer"))",
                                        data: postData,
                                        success: function (data) {
                                            //reload grid
                                            var grid = $('#grid').data('kendoGrid');
                                            grid.dataSource.read();

                                            swal({ title: data.Title, text: data.Message, type: "success" });

                                            selectedIds = [];
                                        },
                                        error: function (xhr, ajaxOptions, thrownError) {
                                            alert(thrownError);
                                        },
                                        traditional: true
                                    });
                                }
                            });
                        }

                        return false;
                    });

                    //Export
                    $('#exportCustomer').click(function () {
                        var SourceID = $("#SourceID").val();
                        var DateFrom = $("#DateFrom").val();
                        var DateEnd = $("#DateEnd").val();
                        window.location.href = '@Url.Action("ExportExcel","Customer")?SourceID=' + SourceID + '&DateFrom=' + DateFrom+ '&DateEnd=' + DateEnd;

                    });

                    $('#exportCSVCustomer').click(function () {
                        var SourceID = $("#SourceID").val();
                        var DateFrom = $("#DateFrom").val();
                        var DateEnd = $("#DateEnd").val();
                        window.location.href = '@Url.Action("ExportCSV", "Customer")?SourceID=' + SourceID + '&DateFrom=' + DateFrom + '&DateEnd=' + DateEnd;

                    });


                    $('#SourceID').keydown(function (even) {
                        if (even.keyCode == 13) {
                            var grid = $('#grid').data('kendoGrid');
                            grid.dataSource.page(1);
                            return false;
                        }
                    });
                    $('#DateFrom').keydown(function (even) {
                        if (even.keyCode == 13) {
                            var grid = $('#grid').data('kendoGrid');
                            grid.dataSource.page(1);
                            return false;
                        }
                    });
                    $('#DateEnd').keydown(function (even) {
                        if (even.keyCode == 13) {
                            var grid = $('#grid').data('kendoGrid');
                            grid.dataSource.page(1);
                            return false;
                        }
                    });
                });

                function additionalData() {
                    return {
                        SourceID: $('#SourceID').val(),
                        DateFrom: $('#DateFrom').val(),
                        DateEnd: $('#DateEnd').val()
                    };
                }
                function onDataBound(e) {
                    $('#grid input[type=checkbox][id!=mastercheckbox]').each(function () {
                        var currentId = $(this).val();
                        var checked = jQuery.inArray(currentId, selectedIds);
                        //set checked based on if current checkbox's value is in selectedIds.
                        $(this).attr('checked', checked > -1);
                    });

                    updateMasterCheckbox();
                    $('#grid tbody tr td:nth-child(2)').css('cursor', 'pointer');
                    $('#grid tbody tr td:nth-child(2)').bind('click', function () {
                        //alert($(this).text());
                        alert('12');
                        $.ajax({
                            type: "GET",
                            dataType: 'json',
                            url: '@Url.Action("ShowDetailCustomer", "Customer")?mobilePhone=' + $(this).text(),
                            success: function (result) {
                                if (result.success) {
                                    var mymodal = $('#modalDetailCustomer');
                                    mymodal.find('.modal-body').html(result.html);
                                    mymodal.modal('show');
                                }
                                else {
                                    swal({ title: result.message, confirmButtonText: "Đóng" });
                                }
                            }
                        });
                    });
                }

                function updateMasterCheckbox() {
                    var numChkBoxes = $('#grid input[type=checkbox][id!=mastercheckbox]').length;
                    var numChkBoxesChecked = $('#grid input[type=checkbox][id!=mastercheckbox]:checked').length;
                    $('#mastercheckbox').attr('checked', numChkBoxes == numChkBoxesChecked && numChkBoxes > 0);
                }
            </script>
        </div>

    </div>
</div>

<div class="modal fade" id="modalDetailCustomer" role="dialog">
    <div class="modal-dialog  modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Thông tin khách hàng</h4>
            </div>
            <div class="modal-body">
            </div>
            <div class="modal-footer">
                <button type="button" id="btnSaveInfo" class="btn btn-default"><i class="fa fa-save"></i> Lưu thông tin</button>
                <button type="button" class="btn btn-default" data-dismiss="modal"><i class="fa fa-remove"></i> Đóng</button>
            </div>
        </div>
    </div>
</div>

